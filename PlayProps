package com.yourcompany.config;

import com.fasterxml.jackson.databind.ObjectMapper;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.context.annotation.Configuration;

import java.util.HashMap;
import java.util.Map;
import javax.annotation.PostConstruct;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Value;

@Configuration
@ConfigurationProperties(prefix = "app.hostname")
public class HostnameAliasConfig {
    
    private static final Logger logger = LoggerFactory.getLogger(HostnameAliasConfig.class);
    private final ObjectMapper objectMapper = new ObjectMapper();
    
    @Value("${app.hostname.aliases-json:{}}")
    private String aliasesJson;
    
    private Map<String, String> aliases = new HashMap<>();
    
    @PostConstruct
    public void init() {
        try {
            // Parse the JSON string into our map
            aliases = objectMapper.readValue(
                aliasesJson, 
                objectMapper.getTypeFactory().constructMapType(
                    HashMap.class, String.class, String.class
                )
            );
            logger.info("Loaded {} hostname aliases", aliases.size());
        } catch (Exception e) {
            logger.error("Failed to parse hostname aliases JSON", e);
            // Initialize with empty map if parsing fails
            aliases = new HashMap<>();
        }
    }
    
    public Map<String, String> getAliases() {
        return aliases;
    }
    
    public String getAliasForHostname(String hostname) {
        return aliases.getOrDefault(hostname, hostname);
    }
}
