@Scheduled(fixedDelayString = "${solace.latch.refresh-interval:5000}")
    public void refresh() {
        try {
            Map<String, LatchingStateStore.State> snap = store.snapshot();
            
            var activeRows = new ArrayList<MultiGauge.Row<Number>>(snap.size());
            var sinceRows = new ArrayList<MultiGauge.Row<Number>>(snap.size());

            snap.forEach((key, st) -> {
                Parsed parsed = parseKey(key);
                if (parsed != null && parsed.tags() != null) {
                    // Use the Row.of method with tags and a Number value
                    activeRows.add(MultiGauge.Row.of(parsed.tags(), st.active()));
                    sinceRows.add(MultiGauge.Row.of(parsed.tags(), st.sinceEpochSec()));
                }
            });

            activeGauge.register(activeRows, true);
            sinceGauge.register(sinceRows, true);
            
            log.debug("Refreshed {} gauge metrics", activeRows.size());
        } catch (Exception e) {
            log.error("Failed to refresh metrics", e);
        }
    }
