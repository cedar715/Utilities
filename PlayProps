import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

// ----- Paths (use buildDir / projectDir as requested) -----
val genRoot = "${buildDir}/generated/openapi"

// ===== OpenAPI per-spec tasks (no merging) =====

// Spec: CONFIG
val genConfig by tasks.registering(GenerateTask::class) {
    generatorName.set("spring")
    library.set("spring-cloud")

    // point to your config spec
    inputSpec.set("${projectDir}/specs/config.yaml")

    // keep outputs isolated
    outputDir.set("${genRoot}/config")

    apiPackage.set("com.yourco.config.api")
    modelPackage.set("com.yourco.config.model")
    invokerPackage.set("com.yourco.config.invoker")

    skipValidateSpec.set(true)
    additionalProperties.set(
        mapOf(
            "dateLibrary" to "java8",
            "interfaceOnly" to "true"
        )
    )
    // optional: limit what gets written
    globalProperties.set(mapOf("models" to "", "apis" to "", "supportingFiles" to ""))
}

// Spec: MONITOR
val genMonitor by tasks.registering(GenerateTask::class) {
    generatorName.set("spring")
    library.set("spring-cloud")

    // point to your monitor spec
    inputSpec.set("${projectDir}/specs/monitor.yaml")

    outputDir.set("${genRoot}/monitor")

    apiPackage.set("com.yourco.monitor.api")
    modelPackage.set("com.yourco.monitor.model")
    invokerPackage.set("com.yourco.monitor.invoker")

    skipValidateSpec.set(true)
    additionalProperties.set(
        mapOf(
            "dateLibrary" to "java8",
            "interfaceOnly" to "true"
        )
    )
    globalProperties.set(mapOf("models" to "", "apis" to "", "supportingFiles" to ""))
}

// Keep your old dependency hooks working:
tasks.register("openApiGenerate") {
    dependsOn(genConfig, genMonitor)
}

// Make compilation & packaging depend on generation
tasks.named("compileJava") { dependsOn("openApiGenerate") }
tasks.named("jar") { dependsOn("openApiGenerate") }

// Wire generated sources into the main source set
sourceSets {
    named("main") {
        java {
            // OpenAPI places Java under {outputDir}/src/main/java
            srcDir("${genRoot}/config/src/main/java")
            srcDir("${genRoot}/monitor/src/main/java")
        }
        resources {
            srcDir("${genRoot}/config/src/main/resources")
            srcDir("${genRoot}/monitor/src/main/resources")
        }
    }
}
